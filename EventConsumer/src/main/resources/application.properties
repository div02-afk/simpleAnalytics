spring.application.name=EventConsumer
server.port=8000

# Kafka bootstrap server (assuming running locally)
#spring.kafka.bootstrap-servers=localhost:9092
## Producer configs
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer
## Consumer configs (for testing later)
#spring.kafka.consumer.group-id=analytics-consumer
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer
#spring.kafka.consumer.properties.specific.protobuf.value.type=com.simpleAnalytics.protobuf.EventProto$Event
#
#spring.kafka.properties.schema.registry.url=http://localhost:8081



# ClickHouse DB
spring.datasource.url=jdbc:clickhouse:http://localhost:8123/eventsdb?http_connection_factory=HTTP_URL_CONNECTION
spring.datasource.username=analytics
spring.datasource.password=supersecret
spring.datasource.driver-class-name=com.clickhouse.jdbc.ClickHouseDriver

# HikariCP Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Batch Processing Configuration
app.batch.max-buffer-size=1000
app.batch.max-batch-size=500
app.batch.flush-interval-ms=5000
app.batch.max-retry-attempts=3
app.batch.initial-retry-delay=1000
app.batch.retry-multiplier=2.0
app.batch.max-retry-delay=10000
